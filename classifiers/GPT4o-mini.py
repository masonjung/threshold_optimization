# libraries
from openai import OpenAI
client = OpenAI()
import pandas as pd


# Import training dataset
df = pd.read_csv("C:\\Users\\minse\\Desktop\\Programming\\FairThresholdOptimization\\datasets\\test_t3_features.csv")

# Sample a small fraction of the dataset
df = df.sample(frac=1)
print(df.shape)


# Probability from GPT-4
def get_ai_probability(text):
    # prompt
    prompt = f"Estimate the probability that the following text was generated by an AI:\n\n{text}"

    try:
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
            {
                "role": "system", 
                "content": "You are an AI text detector that estimates the probability that a given text was written by an AI. Respond only with a single numerical probability value between 0 and 1, formatted to 7 decimal points."
            },
            {   
                "role": "user", 
                "content": prompt
            }
            ]
        )
        # probability = response.choices[0].message.content.strip() 
        # return float(probability) 
        
        # print(response)

        # reutrning the probability
        probability = response.choices[0].message.content.strip()
        return float(probability)
    except Exception as e:
        print("except")
        print(f"Error: {e}")
        return None


# Apply the function to each row in the dataframe and create a new column
df['GPT4o-mini_probability'] = df['essay'].apply(lambda x: get_ai_probability(x))


# Print the first few rows to verify results
print(df[['essay', 'GPT4o-mini_probability']])

# Save the dataframe to a new CSV file
df.to_csv("C:\\Users\\minse\\Desktop\\Programming\\FairThresholdOptimization\\datasets\\train_features_with_gpt4o.csv", index=False)

